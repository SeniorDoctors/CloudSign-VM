
#include <stdio.h>
#include <string.h>

void VMStart();
int empty_sp();
int full_sp();
void decoder(int instr);

// Поддерживаемые мнемоники VM
typedef enum {
  // Положить значение на стек. Этот параметр имеет один аргумент
  PUSH  = 0x00d00201,
  // Получить значение со стека. Берется верхушка стека
  POP = 0x00d00205,
  // Сложить два верхних значения стека
  ADD = 0x00d00202,
  // Вычесть два верхних значения стека
  SUB = 0x00d00206,
  // Поделить два значения
  DIV = 0x00d00203,
  // Перемножить два значения. Во всех четырех операциях результат кладется на стек
  MUL = 0x00d00204,
  // Ввести данные
  ENTER = 0x00d00211,
  // Сверка данных с шаблоном
  TEST  = 0x00d00209,
  // Вывести верхушку стека
  PRINT = 0x00d00210,
  // Вывести все данные, которые находятся в нашей памяти
  RAM = 0x00d00208,
  // Завершить работу виртуальной машины
  EXIT  = 0x00d00207
} mnemonics;


// ИСПОЛНЯЕМЫЙ СОБСТВЕННЫЙ АССЕМБЛЕРНЫЙ КОД
const int code[] = {
    PUSH, 22,
    PUSH, 45,
    RAM,
    SUB,
    POP,
    PUSH, 23,
    PUSH, 9,
    PUSH, 5,
    RAM,
    PRINT,
    ADD,
    POP,
    PUSH, 7,
    PUSH, 7,
    RAM,
    ADD,
    POP,
    POP,
    ENTER,
    PRINT,
    TEST,
    EXIT
};

